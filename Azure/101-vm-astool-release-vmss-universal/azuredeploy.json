{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "User name for the Virtual Machine."
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for the Virtual Machine."
      }
    },
    "instanceCount": {
      "type": "int",
      "defaultValue": 2,
      "metadata": {
        "description": "Number of VM instances (100 or less)."
      },
      "maxValue": 5
    },
    "dnsLabelPrefix": {
      "type": "string",
      "metadata": {
        "description": "Unique DNS Name for the Public IP used to access the Virtual Machine. DNS name: <dnsLabelPrefix>.<Region>.cloudapp.azure.com"
      }
    },
    "configurationOS": {
      "type": "string",
      "defaultValue": "debian",
      "allowedValues": [
        "debian",
        "ubuntu",
        "centos",
        "redhat",
        "windowsserver2016"
      ],
      "metadata": {
        "description": "The Operating System to be installed on the VM. Default value debian. Allowed values: debian,ubuntu,centos,redhat,nanoserver2016,windowsserver2016"
      }
    },
    "configurationSize": {
      "type": "string",
      "defaultValue": "Small",
      "allowedValues": [
        "Small",
        "Medium",
        "Large",
        "XLarge"
      ],
      "metadata": {
        "description": "Configuration Size: VM Size + Disk Size"
      }
    }
  },
  "variables": {
    "astoolConfigFileLinux": "https://raw.githubusercontent.com/flecoqui/ASTool/master/Azure/101-vm-astool-release-vmss-universal/astool.linux.xml",
    "astoolConfigFileWindows": "https://raw.githubusercontent.com/flecoqui/ASTool/master/Azure/101-vm-astool-release-vmss-universal/astool.windows.xml",
    "configurationSizeSmall": {
      "vmSize": "Standard_F1",
      "diskSize": "128"
    },
    "configurationSizeMedium": {
      "vmSize": "Standard_F2",
      "diskSize": "256"
    },
    "configurationSizeLarge": {
      "vmSize": "Standard_F4",
      "diskSize": "512"
    },
    "configurationSizeXLarge": {
      "vmSize": "Standard_F4",
      "diskSize": "1024"
    },
    "configurationOS": {
      "debian": {
        "publisher": "credativ",
        "offer": "Debian",
        "sku": "8",
        "version": "latest",
        "installScriptUrl": "https://raw.githubusercontent.com/flecoqui/ASTool/master/Azure/101-vm-astool-release-vmss-universal/install-software.sh",
        "installScriptFileName": "install-software.sh",
        "commandToExecute": "[concat('sh install-software.sh \"',  parameters('dnsLabelPrefix'), '.', resourceGroup().location, '.cloudapp.azure.com','\" \"',variables('astoolConfigFileLinux'),'\"')]",
        "extensionPublisher": "Microsoft.Azure.Extensions",
        "extensionType": "CustomScript",
        "extensionTypeHandlerVersion": "2.0",
        "remoteCommand": "[concat('ssh -p 5000X X: 0 to 1 ', parameters('adminUsername'), '@', parameters('dnsLabelPrefix'), '.', resourceGroup().location, '.cloudapp.azure.com')]",
        "logInformation": "sudo cat /var/lib/waagent/custom-script/download/0/stdout",
        "httpUrl": "[concat('http://', parameters('dnsLabelPrefix'), '.', resourceGroup().location, '.cloudapp.azure.com/index.php')]",
        "natBackendPort": 22
      },
      "ubuntu": {
        "publisher": "Canonical",
        "offer": "UbuntuServer",
        "sku": "16.04.0-LTS",
        "version": "latest",
        "installScriptUrl": "https://raw.githubusercontent.com/flecoqui/ASTool/master/Azure/101-vm-astool-release-vmss-universal/install-software.sh",
        "installScriptFileName": "install-software.sh",
        "commandToExecute": "[concat('sh install-software.sh \"',  parameters('dnsLabelPrefix'), '.', resourceGroup().location, '.cloudapp.azure.com','\" \"',variables('astoolConfigFileLinux'),'\"')]",
        "extensionPublisher": "Microsoft.Azure.Extensions",
        "extensionType": "CustomScript",
        "extensionTypeHandlerVersion": "2.0",
        "remoteCommand": "[concat('ssh -p 5000X X: 0 to 1 ', parameters('adminUsername'), '@', parameters('dnsLabelPrefix'), '.', resourceGroup().location, '.cloudapp.azure.com')]",
        "logInformation": "sudo cat /var/lib/waagent/custom-script/download/0/stdout",
        "httpUrl": "[concat('http://', parameters('dnsLabelPrefix'), '.', resourceGroup().location, '.cloudapp.azure.com/index.php')]",
        "natBackendPort": 22
      },
      "centos": {
        "publisher": "openlogic",
        "offer": "centos",
        "sku": "7.2",
        "version": "latest",
        "installScriptUrl": "https://raw.githubusercontent.com/flecoqui/ASTool/master/Azure/101-vm-astool-release-vmss-universal/install-software.sh",
        "installScriptFileName": "install-software.sh",
        "commandToExecute": "[concat('sh install-software.sh \"',  parameters('dnsLabelPrefix'), '.', resourceGroup().location, '.cloudapp.azure.com','\" \"',variables('astoolConfigFileLinux'),'\"')]",
        "extensionPublisher": "Microsoft.Azure.Extensions",
        "extensionType": "CustomScript",
        "extensionTypeHandlerVersion": "2.0",
        "remoteCommand": "[concat('ssh -p 5000X X: 0 to 1 ', parameters('adminUsername'), '@', parameters('dnsLabelPrefix'), '.', resourceGroup().location, '.cloudapp.azure.com')]",
        "logInformation": "sudo cat /var/lib/waagent/custom-script/download/0/stdout",
        "httpUrl": "[concat('http://', parameters('dnsLabelPrefix'), '.', resourceGroup().location, '.cloudapp.azure.com/index.php')]",
        "natBackendPort": 22
      },
      "redhat": {
        "publisher": "RedHat",
        "offer": "RHEL",
        "sku": "7.2",
        "version": "latest",
        "installScriptUrl": "https://raw.githubusercontent.com/flecoqui/ASTool/master/Azure/101-vm-astool-release-vmss-universal/install-software.sh",
        "installScriptFileName": "install-software.sh",
        "commandToExecute": "[concat('sh install-software.sh \"',  parameters('dnsLabelPrefix'), '.', resourceGroup().location, '.cloudapp.azure.com','\" \"',variables('astoolConfigFileLinux'),'\"')]",
        "extensionPublisher": "Microsoft.Azure.Extensions",
        "extensionType": "CustomScript",
        "extensionTypeHandlerVersion": "2.0",
        "remoteCommand": "[concat('ssh -p 5000X X: 0 to 1 ', parameters('adminUsername'), '@', parameters('dnsLabelPrefix'), '.', resourceGroup().location, '.cloudapp.azure.com')]",
        "logInformation": "sudo cat /var/lib/waagent/custom-script/download/0/stdout",
        "httpUrl": "[concat('http://', parameters('dnsLabelPrefix'), '.', resourceGroup().location, '.cloudapp.azure.com/index.php')]",
        "natBackendPort": 22
      },
      "windowsserver2016": {
        "publisher": "MicrosoftWindowsServer",
        "offer": "WindowsServer",
        "sku": "2016-Datacenter",
        "version": "latest",
        "installScriptUrl": "https://raw.githubusercontent.com/flecoqui/ASTool/master/Azure/101-vm-astool-release-vmss-universal/install-software-windows.ps1",
        "installScriptFileName": "install-software-windows.ps1",
        "commandToExecute": "[concat('powershell.exe -ExecutionPolicy Unrestricted -File install-software-windows.ps1 \"',  parameters('dnsLabelPrefix'), '.', resourceGroup().location, '.cloudapp.azure.com','\"  \"', variables('astoolConfigFileWindows'), '\"' )]",
        "extensionPublisher": "Microsoft.Compute",
        "extensionType": "CustomScriptExtension",
        "extensionTypeHandlerVersion": "1.7",
        "remoteCommand": "[concat('mstsc /admin /v:', parameters('dnsLabelPrefix'), '.', resourceGroup().location, '.cloudapp.azure.com:5000X X:0 to 1')]",
        "logInformation": "type c:\\source\\install.log",
        "httpUrl": "[concat('http://', parameters('dnsLabelPrefix'), '.', resourceGroup().location, '.cloudapp.azure.com')]",
        "natBackendPort": 3389
      }
    },
    "configurationSize": "[variables(concat('configurationSize', parameters('configurationSize')))]",
    "storageAccountNamePrefix": "[toLower(substring(concat(parameters('dnsLabelPrefix'), uniqueString(resourceGroup().id)), 0, 8))]",
    "storageAccountName": "[concat(variables('storageAccountNamePrefix'), uniqueString(concat(resourceGroup().id, variables('storageAccountNamePrefix'))),'sa')]",
    "networkSecurityGroupName": "[concat(parameters('dnsLabelPrefix'), 'nsg')]",
    "dataDisk1VhdName": "[concat(parameters('dnsLabelPrefix'), 'datadisk')]",
    "imagePublisher": "credativ",
    "imageOffer": "Debian",
    "OSDiskName": "osdisksimplevm",
    "nicName": "[concat(parameters('dnsLabelPrefix'), 'nic')]",
    "addressPrefix": "10.0.0.0/16",
    "subnetName": "[concat(parameters('dnsLabelPrefix'), 'subnet')]",
    "subnetPrefix": "10.0.0.0/24",
    "storageAccountType": "Standard_LRS",
    "publicIPAddressName": "[concat(parameters('dnsLabelPrefix'), 'ip')]",
    "publicIPAddressType": "Dynamic",
    "vmStorageAccountContainerName": "vhds",
    "vmName": "[concat(parameters('dnsLabelPrefix'), 'vm')]",
    "vmSize": "[variables('configurationSize').vmSize]",
    "vmDataDiskSize": "[variables('configurationSize').diskSize]",
    "virtualNetworkName": "[concat(parameters('dnsLabelPrefix'), 'vnet')]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",

    "namingInfix": "[toLower(substring(concat(variables('vmName'), uniqueString(resourceGroup().id)), 0, 9))]",
    "ipConfigName": "[concat(variables('namingInfix'), 'ipconfig')]",
    "loadBalancerName": "[concat(variables('namingInfix'), 'lb')]",
    "publicIPAddressID": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]",
    "lbID": "[resourceId('Microsoft.Network/loadBalancers',variables('loadBalancerName'))]",
    "natPoolName": "[concat(variables('namingInfix'), 'natpool')]",
    "bePoolName": "[concat(variables('namingInfix'), 'bepool')]",
    "natStartPort": 50000,
    "natEndPort": 50005,
    "frontEndIPConfigID": "[concat(variables('lbID'),'/frontendIPConfigurations/loadBalancerFrontEnd')]",

    "computeApiVersion": "2016-03-30",
    "networkApiVersion": "2016-03-30",
    "insightsApiVersion": "2015-04-01",
    "apiVersion": "2015-06-15"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('storageAccountName')]",
      "apiVersion": "[variables('apiVersion')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('networkSecurityGroupName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "ssh",
            "properties": {
              "description": "SSH port",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 100,
              "direction": "Inbound"
            }
          },
          {
            "name": "rdp",
            "properties": {
              "description": "RDP port",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "3389",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 101,
              "direction": "Inbound"
            }
          },
          {
            "name": "winrm1",
            "properties": {
              "description": "WINRM1 port",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "5985",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 102,
              "direction": "Inbound"
            }
          },
          {
            "name": "winrm2",
            "properties": {
              "description": "WINRM2 port",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "5986",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 103,
              "direction": "Inbound"
            }
          },
          {
            "name": "http",
            "properties": {
              "description": "http server port",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "80",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 104,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "[variables('networkApiVersion')]",
      "type": "Microsoft.Network/loadBalancers",
      "name": "[variables('loadBalancerName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]"
      ],
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "LoadBalancerFrontEnd",
            "properties": {
              "publicIPAddress": {
                "id": "[variables('publicIPAddressID')]"
              }
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "[variables('bePoolName')]"
          }
        ],
        "inboundNatPools": [
          {
            "name": "[variables('natPoolName')]",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('frontEndIPConfigID')]"
              },
              "protocol": "tcp",
              "frontendPortRangeStart": "[variables('natStartPort')]",
              "frontendPortRangeEnd": "[variables('natEndPort')]",
              "backendPort": "[variables('configurationOS')[parameters('configurationOS')].natBackendPort]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[parameters('dnsLabelPrefix')]"
        }
      }
    },
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkSecurityGroups/', variables('networkSecurityGroupName'))]"
      ],
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
              }
            }
          }
        ]
      }
    },
     {
      "type": "Microsoft.Compute/virtualMachineScaleSets",
      "name": "[variables('namingInfix')]",
      "location": "[resourceGroup().location]",
      "apiVersion": "[variables('computeApiVersion')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.Network/loadBalancers/', variables('loadBalancerName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
      ],
      "sku": {
        "name": "[variables('vmSize')]",
        "tier": "Standard",
        "capacity": "[parameters('instanceCount')]"
      },
      "properties": {
        "overprovision": "true",
        "upgradePolicy": {
          "mode": "Manual"
        },
        "virtualMachineProfile": {
          "storageProfile": {
            "osDisk": {
              "vhdContainers": [
                "[concat('http://',variables('storageAccountName'),'.blob.core.windows.net/',variables('vmStorageAccountContainerName'),'/',variables('OSDiskName'),'.vhd')]"
              ],
              "name": "[variables('osDiskName')]",
              "caching": "ReadOnly",
              "createOption": "FromImage"
            },

            "imageReference": {
              "publisher": "[variables('configurationOS')[parameters('configurationOS')].publisher]",
              "offer": "[variables('configurationOS')[parameters('configurationOS')].offer]",
              "sku": "[variables('configurationOS')[parameters('configurationOS')].sku]",
              "version": "[variables('configurationOS')[parameters('configurationOS')].version]"
            }
          },
          "osProfile": {
            "computerNamePrefix": "[variables('namingInfix')]",
            "adminUsername": "[parameters('adminUsername')]",
            "adminPassword": "[parameters('adminPassword')]"
          },
          "networkProfile": {
            "networkInterfaceConfigurations": [
              {
                "name": "[variables('nicName')]",
                "properties": {
                  "primary": "true",
                  "ipConfigurations": [
                    {
                      "name": "[variables('ipConfigName')]",
                      "properties": {
                        "subnet": {
                          "id": "[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'), '/subnets/', variables('subnetName'))]"
                        },
                        "loadBalancerBackendAddressPools": [
                          {
                            "id": "[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/loadBalancers/', variables('loadBalancerName'), '/backendAddressPools/', variables('bePoolName'))]"
                          }
                        ],
                        "loadBalancerInboundNatPools": [
                          {
                            "id": "[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/loadBalancers/', variables('loadBalancerName'), '/inboundNatPools/', variables('natPoolName'))]"
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            ]
          },
          "extensionProfile": {
            "extensions": [
              {
                "name": "init",
                "properties": {
                  "publisher": "[variables('configurationOS')[parameters('configurationOS')].extensionPublisher]",
                  "type": "[variables('configurationOS')[parameters('configurationOS')].extensionType]",
                  "typeHandlerVersion": "[variables('configurationOS')[parameters('configurationOS')].extensionTypeHandlerVersion]",
                  "autoUpgradeMinorVersion": true,
                  "settings": {
                    "fileUris": [
                      "[variables('configurationOS')[parameters('configurationOS')].installScriptUrl]"
                    ],
                    "commandToExecute": "[variables('configurationOS')[parameters('configurationOS')].commandToExecute]"
                  }
                }
              }
            ]
          }

        }
      }
    },
    {
      "type": "Microsoft.Insights/autoscaleSettings",
      "apiVersion": "[variables('insightsApiVersion')]",
      "name": "autoscalewad",
      "location": "[resourceGroup().location]",
      "scale":  null,
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachineScaleSets/', variables('namingInfix'))]"
      ],
      "properties": {
        "name": "autoscalewad",
        "targetResourceUri": "[concat('/subscriptions/',subscription().subscriptionId, '/resourceGroups/',  resourceGroup().name, '/providers/Microsoft.Compute/virtualMachineScaleSets/', variables('namingInfix'))]",
        "enabled": true,
        "profiles": [
          {
            "name": "Profile1",
            "capacity": {
              "minimum": "1",
              "maximum": "5",
              "default": "1"
            }    
          }
        ]
      }
    }

  ],
  "outputs": {
    "hostname": {
      "type": "string",
      "value": "[concat(parameters('dnsLabelPrefix'), '.', resourceGroup().location, '.cloudapp.azure.com')]"
    },
    "remoteCommand": {
      "type": "string",
      "value": "[variables('configurationOS')[parameters('configurationOS')].remoteCommand]"
    },
    "logInformation": {
      "type": "string",
      "value": "[variables('configurationOS')[parameters('configurationOS')].logInformation]"
    },
    "httpClient": {
      "type": "string",
      "value": "[variables('configurationOS')[parameters('configurationOS')].httpUrl]"
    }
  }
}
